/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT  0
#define RAISE    1

// -----------------------------------
// | TAB:TAB |    |    |    |    |   -:-  =:=  <:<   |   (< = bksp)
// | ESC:ESC |    |    |    |    |    |   #:#   |
// |    |    |    |    |    |    |    |    |
//           |    |    |         |    |    |

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp KP_ASTERISK  &kp KP_DIVIDE  &kp KP_EQUAL  &kp KP_NUM  &kp BACKSPACE  &kp EQUAL  &kp MINUS  &kp N0  &kp N9  &kp N8   &kp N6  &kp N5  &kp N3  &kp N2  &kp N1  &kp GRAVE
  &kp KP_PLUS  &kp KP_N9  &kp KP_N8  &kp KP_N7  &kp RIGHT_BRACKET  &kp LEFT_BRACKET  &kp P  &kp O  &kp I  &kp N7  &kp Y  &kp N4  &kp E  &kp W   &kp Q  &kp TAB
  &kp KP_MINUS  &kp KP_N6  &kp KP_N5  &kp KP_N4  &kp ENTER  &kp SEMICOLON  &kp L  &kp K   &kp J  &kp U  &kp T  &kp R  &kp D  &kp S  &kp A  &kp ESC
  &kp KP_N3  &kp KP_N2  &kp KP_N1  &kp RSHIFT  &kp APOSTROPHE  &kp SLASH  &kp PERIOD &kp COMMA  &kp M  &kp H  &kp G  &kp F  &kp C  &kp X  &kp Z  &kp LSHIFT
  &kp KP_ENTER  &kp KP_COMMA  &kp KP_N0  &kp RIGHT  &kp UP &kp DOWN  &kp LEFT  &kp BACKSLASH  &kp SPACE  &kp N  &kp B  &kp V  &lt RAISE GRAVE  &kp LMETA  &kp LALT  &kp LCTRL
            >;
        };
       raise_layer {
            bindings = <
  &trans  &trans  &bt BT_CLR  &bootloader  &trans  &trans2  &trans1  &trans0  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
       };
    };
};
